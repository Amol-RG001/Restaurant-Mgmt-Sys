// <auto-generated />
using FoodRecipe.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodRecipe.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220921074204_AddedNewIngredientsAndStep")]
    partial class AddedNewIngredientsAndStep
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoodRecipe.Models.AddFoodRecipe", b =>
                {
                    b.Property<int>("FoodRecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FoodIngredient")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("FoodMakingStep")
                        .IsRequired()
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<string>("FoodRecipeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("FoodSubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("FoodRecipeId");

                    b.HasIndex("FoodSubCategoryId");

                    b.ToTable("FoodRecipes");
                });

            modelBuilder.Entity("FoodRecipe.Models.FoodCategory", b =>
                {
                    b.Property<int>("FoodCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FoodCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("FoodCategoryId");

                    b.ToTable("FoodCategories");
                });

            modelBuilder.Entity("FoodRecipe.Models.FoodSubCategory", b =>
                {
                    b.Property<int>("FoodSubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FoodCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("FoodSubCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("FoodSubCategoryId");

                    b.HasIndex("FoodCategoryId");

                    b.ToTable("FoodSubCategories");
                });

            modelBuilder.Entity("FoodRecipe.Models.AddFoodRecipe", b =>
                {
                    b.HasOne("FoodRecipe.Models.FoodSubCategory", "FoodSubCategory")
                        .WithMany("AddFoodRecipes")
                        .HasForeignKey("FoodSubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FoodRecipe.Models.FoodSubCategory", b =>
                {
                    b.HasOne("FoodRecipe.Models.FoodCategory", "FoodCategory")
                        .WithMany("FoodSubCategories")
                        .HasForeignKey("FoodCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
